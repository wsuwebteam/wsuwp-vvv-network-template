server {

	listen       80;
	listen       443 ssl http2;
	server_name  {vvv_hosts};
	root         {vvv_path_to_site}/public_html;

    {vvv_tls_cert}
    {vvv_tls_key}

	# This is needed to set the PHP being used
    set          $upstream {upstream};

	# Nginx logs
    error_log    {vvv_path_to_site}/log/nginx-error.log;
    access_log   {vvv_path_to_site}/log/nginx-access.log;


    # Per https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    #
    # Prevents IE and Google Chrome from MIME-sniffing a response away from the declared
    # content-type.
    add_header X-Content-Type-Options nosniff;

    # Enable the XSS filter built into modern web browsers. This will re-enable
    # the XSS filter if a user has disabled it.
    add_header X-XSS-Protection "1; mode=block";

    # Ensure that content served from this server is not embedded in other pages
    # unless they are of the same origin.
    add_header X-Frame-Options SAMEORIGIN;

	location / {
		index index.php;
		try_files $uri $uri/ /index.php$is_args$args;
 	}

	# Tell the F5 how to treat this server.
	location /lb {
		return 200 'OK production wsuwpa-p2n01.web.wsu.edu';
		#return 404 'DOWN prod wsuwpa-p2n01.web.wsu.edu';
		add_header Content-Type text/plain;
	}

	# Tell the temporary F5 config how to treat this server.
	location /templb {
		return 200 'OK temp wsuwpa-p2n01.web.wsu.edu';
		add_header Content-Type text/plain;
	}

	# We'll want to set a different X-Frame-Option header on posts which
	# are embedded in other sites.
	location ~ /embed/ {
		set $embed_request 1;
		try_files $uri $uri/ /index.php$is_args$args;
	}

	location ~* ^/favicon.ico {
        	access_log off;
        	log_not_found off;
        	return 404;
	}

	location = /cougar.ico {
		access_log off;
		log_not_found off;
		return 404;
	}

	location ~ ^/apple-touch-icon(.*)\.png$ {
       		access_log off;
        	log_not_found off;
        	return 404;
	}

	location = /EWS/Exchange.asmx {
		access_log off;
		log_not_found off;
		return 404;
	}

	location /analytics.txt {
		root {vvv_path_to_site}/public_html/wp-content/uploads;
	}

	location /atlassian-domain-verification.html {
		root {vvv_path_to_site}/public_html/wp-content/uploads;
	}

    location ~* /fallback/webutil.html {
	access_log off;
	log_not_found off;
	return 404;
    }

    location ~* /autodiscover/autodiscover.xml {
        access_log off;
        log_not_found off;
        return 404;
    }

	# Deny direct access to PHP files in wp-includes and wp-admin/includes.
	location ~ /(wp-includes|wp-admin\/includes)/(.+)\.php$ {
			access_log off;
			log_not_found off;
			deny all;
	}

	# Deny direct access to PHP files in the WordPress root.
	location ~ /(xmlrpc|wp-comments-post|wp-settings|wp-load|wp-mail|wp-config-sample|wp-blog-header).php$ {
		access_log off;
		log_not_found off;
		deny all;
	}

	# Requests to WordPress are made in /wordpress/, which is at the same
	# level as /wp-content/. To properly handle these, we provide an alias
	# to move up a directory and find static files.
	location ~ ^/wp-content/(mu-plugins|plugins|themes)/(.*)$ {
		expires 7d;
		alias {vvv_path_to_site}/public_html/wp-content/$1/$2;
	}

	location ~ "^/wp-content/uploads/(.*)$" {
			expires 7d;
			alias {vvv_path_to_site}/public_html/wp-content/uploads/;
			try_files $1 @missing;
	}

	location @missing {
			rewrite "^/wp-content/uploads/(.*)$" "https://s3.wp.wsu.edu/uploads/$1" redirect;
			rewrite "^/[_0-9a-zA-Z-]/wp-content/uploads/(.*)$" "https://s3.wp.wsu.edu/uploads/$1" redirect;
	}

    # Match any requests created by the WP Document Revisions plugin, which
    # masks a full download URL with a URL processed by WordPress behind
    # existing authentication.
    location ~ ^/([_0-9a-zA-Z-]+/)?documents/(.*)$ {
        index index.php;
        try_files $uri /index.php$is_args$args;
    }

    # Handle all static assets by serving the file directly. Add directives
    # to send expires headers and turn off 404 error logging.
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|xls|doc|zip|exe|mp3|mp4|pdf|ai|psd|eps|ppt|dmg|csv|key|numbers|pages)$ {
        expires 7d;
        log_not_found off;
    }

	# Prevent hidden files (beginning with a period) from being served.
	#
	# Access to `/.well-known/` is allowed.
	#   - https://www.mnot.net/blog/2010/04/07/well-known
	#   - https://tools.ietf.org/html/rfc5785
	location ~* /\.(?!well-known\/) {
		access_log off;
		log_not_found off;
		deny all;
	}

	# Via https://github.com/h5bp/server-configs-nginx/
	#
	# Prevent a variety of file extensions associated with backups and configs
	# from being served.
	location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|sh|sql|sw[op])|~)$ {
		access_log off;
		log_not_found off;
		deny all;
	}

    # Rewrite multisite in a subdirectory '.../wp-.*' and '.../*.php'.
    if (!-e $request_filename) {
        rewrite ^/[_0-9a-zA-Z-]+(/wp-.*) $1 last;
        rewrite ^/[_0-9a-zA-Z-]+.*(/wp-admin/.*\.php)$ $1 last;
        rewrite ^/[_0-9a-zA-Z-]+(/.*\.php)$ $1 last;
    }

    location ~ \.php$ {
        client_max_body_size 150M;
        try_files      $uri =404;

		# Per https://www.owasp.org/index.php/List_of_useful_HTTP_headers
		#
		# Prevents IE and Google Chrome from MIME-sniffing a response away from the declared
		# content-type.
		add_header X-Content-Type-Options nosniff;

		# Enable the XSS filter built into modern web browsers. This will re-enable
		# the XSS filter if a user has disabled it.
		add_header X-XSS-Protection "1; mode=block";

		add_header X-Frame-Options DENY;

		# Set slightly different headers for oEmbed requests
		if ( $embed_request ) {
			add_header X-Frame-Option ALLOWALL;
			add_header X-Content-Type-Options nosniff;
			add_header X-XSS-Protection "1; mode=block";
		}

		# Include the fastcgi_params defaults provided by nginx
		include        /etc/nginx/fastcgi_params;

		# The amount of time for upstream to wait for a fastcgi process to send data.
		# We keep this *extremely* high so that one can be lazy when remote debugging.
		fastcgi_read_timeout 3600s;

		# Buffer size for reading the header of the backend FastCGI process.
		# This defaults to the value of a single fastcgi_buffers, so does not
		# need to be specified in our case, but it's good to be explicit.
		fastcgi_buffer_size 128k;

		# The number and size of the buffers into which the reply from the FastCGI
		# process in the backend is read.
		#
		# 4 buffers at 128k means that any reply by FastCGI greater than 512k goes
		# to disk and replies under 512k are handled directly in memory.
		fastcgi_buffers 4 128k;

		# SCRIPT_FILENAME is a required parameter for things to work properly,
		# but was missing in the default fastcgi_params on upgrade to nginx 1.4.
		# We define it here to be sure that it exists.
		fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;

		# Use the upstream defined in the upstream variable.
		fastcgi_pass   $upstream;

		# And get to serving the file!
		fastcgi_index  index.php;


		# Not sure what this is
		{{LIVE_URL}}
    }
}
